name: Build and Push and Release to Modrinth
on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write # Required to use the GitHub API

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Ensure `gh` CLI is installed and working
      - name: Check gh CLI version
        run: gh --version

      # Authenticate `gh` CLI using GITHUB_TOKEN
      - name: Authenticate gh CLI
        run: gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Setup Gradle 8.11
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: 8.11

      - name: Cache Gradle wrapper
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/wrapper/
            ~/.gradle/caches/
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Read Version from gradle.properties
        id: get_version
        run: |
          VERSION=$(grep "^mod_version" gradle.properties | cut -d'=' -f2 | tr -d ' ')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build with Gradle
        run: gradle build --build-cache

      - name: List Files for debugging
        run: ls -Ra

      - name: Remove sources artifact
        run: rm build/libs/*sources.jar

      # Upload the .jar to the latest GitHub release assets
      - name: Upload the .jar to the latest release
        uses: softprops/action-gh-release@v2
        with:
          files: build/libs/player-persistence-${{ env.VERSION }}.jar
          token: ${{ secrets.GITHUB_TOKEN }}